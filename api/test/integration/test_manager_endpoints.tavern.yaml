---
test_name: GET /manager/status

marks:
  - base_tests

stages:

  # GET /manager/status
  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/status"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - ossec-agentlessd: !anystr
              ossec-analysisd: !anystr
              ossec-authd: !anystr
              ossec-csyslogd: !anystr
              ossec-dbd: !anystr
              ossec-execd: !anystr
              ossec-integratord: !anystr
              ossec-logcollector: !anystr
              ossec-maild: !anystr
              ossec-monitord: !anystr
              ossec-remoted: !anystr
              ossec-reportd: !anystr
              ossec-syscheckd: !anystr
              wazuh-apid: !anystr
              wazuh-clusterd: !anystr
              wazuh-db: !anystr
              wazuh-modulesd: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /manager/info

stages:

  # GET /manager/info
  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/info"
      method: GET
      headers:
          Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - compilation_date: !anystr
              max_agents: !anystr
              openssl_support: !anystr
              path: !anystr
              ruleset_version: !anystr
              type: !anystr
              tz_name: !anystr
              tz_offset: !anystr
              version: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /manager/configuration?{section}

marks:
 - parametrize:
     key: section
     vals:
       - alerts
       - auth
       - cis-cat
       - cluster
       - command
       - global
       - localfile
       - osquery
       - remote
       - rootcheck
       - ruleset
       - sca
       - syscheck
       - syscollector
       - vulnerability-detector

stages:

  # GET /manager/configuration
  - name: Request all sections
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration"
      method: GET
      headers:
          Authorization: "Bearer {test_login_token}"
      params:
        section: "{section}"
    response:
      status_code: 200
      verify_response_with:
        # Check response item keys are the selected keys
        function: tavern_utils:test_select_key_affected_items
        extra_kwargs:
          select_key: "{section:s}"

---
test_name: GET /manager/configuration

stages:

  # GET /manager/configuration
  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration"
      method: GET
      headers:
          Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - alerts: !anything
              auth: !anything
              cis-cat: !anything
              cluster: !anything
              command: !anything
              global: !anything
              localfile: !anything
              osquery: !anything
              remote: !anything
              rootcheck: !anything
              ruleset: !anything
              sca: !anything
              syscheck: !anything
              syscollector: !anything
              vulnerability-detector: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0


  # GET /manager/configuration
  - name: Request section and field (1)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration"
      method: GET
      headers:
          Authorization: "Bearer {test_login_token}"
      params:
        section: rootcheck
        field: disabled
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - rootcheck:
                disabled: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # GET /manager/configuration
  - name: Request section and field (2)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration"
      method: GET
      headers:
          Authorization: "Bearer {test_login_token}"
      params:
        section: syscheck
        field: frequency
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - syscheck:
                frequency: !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # GET /manager/configuration
  - name: Request invalid section
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration"
      method: GET
      headers:
          Authorization: "Bearer {test_login_token}"
      params:
        section: invalid_section
    response:
      status_code: 400

  # GET /manager/configuration
  - name: Request invalid field
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration"
      method: GET
      headers:
          Authorization: "Bearer {test_login_token}"
      params:
        section: syscheck
        field: invalid_field
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1103
              id:
                - !anystr
          total_affected_items: 0
          total_failed_items: 1

---
test_name: GET /manager/stats

stages:

  # GET /manager/stats
  - name: Manager stats
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/stats"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
        status_code: 400
        json:
          error: 1308

  - name: Manager stats
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/stats"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        date: "2019-08-27"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - alerts: !anything
              events: !anyint
              firewall: !anyint
              hour: !anyint
              syscheck: !anyint
              totalAlerts: !anyint
          total_affected_items: 1
          failed_items: []
          total_failed_items: 0

  # GET /manager/stats
  - name: Manager stats with old date
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/stats"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        date: "1970-01-01"
    response:
      status_code: 400
      json:
        error: 1308

---
test_name: GET /manager/stats/hourly

stages:

  # GET /manager/stats/hourly
  - name: Hourly stats
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/stats/hourly"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - averages: !anything
                interactions: !anyint
            total_affected_items: 1
            failed_items: []
            total_failed_items: 0
---
test_name: GET /manager/stats/weekly

stages:

  # GET /manager/stats/weekly
  - name: Weekly stats
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/stats/weekly"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - Sun:
                    hours: !anything
                    interactions: !anyint
              - Mon:
                  hours: !anything
                  interactions: !anyint
              - Tue:
                  hours: !anything
                  interactions: !anyint
              - Wed:
                  hours: !anything
                  interactions: !anyint
              - Thu:
                  hours: !anything
                  interactions: !anyint
              - Fri:
                  hours: !anything
                  interactions: !anyint
              - Sat:
                  hours: !anything
                  interactions: !anyint
            total_affected_items: 7
            failed_items: []
            total_failed_items: 0
---
test_name: GET /manager/stats/analysisd

stages:

  # GET /manager/stats/analysisd
  - name: Analysisd stats
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/stats/analysisd"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - total_events_decoded: !anyfloat
                syscheck_events_decoded: !anyfloat
                syscheck_edps: !anyfloat
                syscollector_events_decoded: !anyfloat
                syscollector_edps: !anyfloat
                rootcheck_events_decoded: !anyfloat
                rootcheck_edps: !anyfloat
                sca_events_decoded: !anyfloat
                sca_edps: !anyfloat
                hostinfo_events_decoded: !anyfloat
                hostinfo_edps: !anyfloat
                winevt_events_decoded: !anyfloat
                winevt_edps: !anyfloat
                other_events_decoded: !anyfloat
                other_events_edps: !anyfloat
                events_processed: !anyfloat
                events_edps: !anyfloat
                events_received: !anyfloat
                events_dropped: !anyfloat
                alerts_written: !anyfloat
                firewall_written: !anyfloat
                fts_written: !anyfloat
                syscheck_queue_usage: !anyfloat
                syscheck_queue_size: !anyfloat
                syscollector_queue_usage: !anyfloat
                syscollector_queue_size: !anyfloat
                rootcheck_queue_usage: !anyfloat
                rootcheck_queue_size: !anyfloat
                sca_queue_usage: !anyfloat
                sca_queue_size: !anyfloat
                hostinfo_queue_usage: !anyfloat
                hostinfo_queue_size: !anyfloat
                winevt_queue_usage: !anyfloat
                winevt_queue_size: !anyfloat
                event_queue_usage: !anyfloat
                event_queue_size: !anyfloat
                rule_matching_queue_usage: !anyfloat
                rule_matching_queue_size: !anyfloat
                alerts_queue_usage: !anyfloat
                alerts_queue_size: !anyfloat
                firewall_queue_usage: !anyfloat
                firewall_queue_size: !anyfloat
                statistical_queue_usage: !anyfloat
                statistical_queue_size: !anyfloat
                archives_queue_usage: !anyfloat
                archives_queue_size: !anyfloat
            total_affected_items: 1
            failed_items: []
            total_failed_items: 0
---
test_name: GET /manager/stats/remoted

stages:

  # GET /manager/stats/remoted
  - name: Remoted stats
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/stats/remoted"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - queue_size: !anyfloat
                total_queue_size: !anyfloat
                tcp_sessions: !anyfloat
                evt_count: !anyfloat
                ctrl_msg_count: !anyfloat
                discarded_count: !anyfloat
                msg_sent: !anyfloat
                recv_bytes: !anyfloat
            total_affected_items: 1
            failed_items: []
            total_failed_items: 0

---
test_name: GET /manager/logs

stages:

  # GET /manager/logs
  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items: !anything
            failed_items: []
            total_affected_items: !anyint
            total_failed_items: 0

  # GET /manager/logs
  - name: Filters -> limit=4
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 4
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - &manager_log
                description: !anystr
                level: !anystr
                tag: !anystr
                timestamp: !anystr
              - <<: *manager_log
              - <<: *manager_log
              - <<: *manager_log
            failed_items: []
            total_affected_items: !anyint
            total_failed_items: 0

  # GET /manager/logs
  - name: Filters -> limit=2, sort=-level
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -level
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - <<: *manager_log
              - <<: *manager_log
            failed_items: []
            total_affected_items: !anyint
            total_failed_items: 0

  # GET /manager/logs
  - name: Filters -> offset=3, limit=3
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 3
        offset: 3
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - <<: *manager_log
              - <<: *manager_log
              - <<: *manager_log
            failed_items: []
            total_affected_items: !anyint
            total_failed_items: 0

  # GET /manager/logs
  - name: Filters -> offset=3, level=info, limit=4
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 4
        offset: 3
        level: info
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - <<: *manager_log
              - <<: *manager_log
              - <<: *manager_log
              - <<: *manager_log
            failed_items: []
            total_affected_items: !anyint
            total_failed_items: 0

  # GET /manager/logs
  - name: Filters -> tag=ossec-analysisd, limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        tag: ossec-analysisd
        limit: 1
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - <<: *manager_log
            failed_items: []
            total_affected_items: !anyint
            total_failed_items: 0

  # GET /manager/logs
  - name: Filters -> tag=ossec-syscheckd, limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        tag: ossec-syscheckd
        limit: 1
    response:
        status_code: 200
        json:
          error: !anyint
          data:
            affected_items:
              - <<: *manager_log
            failed_items: []
            total_affected_items: !anyint
            total_failed_items: 0

  - name: Filters by query (tag=ossec-syscheckd, level=info)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        q: tag=ossec-syscheckd;level=info
    response:
      status_code: 200
      verify_response_with:
        - function: tavern_utils:test_expected_value
          extra_kwargs:
            key: "tag"
            expected_values: "ossec-syscheckd"
        - function: tavern_utils:test_expected_value
          extra_kwargs:
            key: "level"
            expected_values: "info"

---
test_name: GET /manager/logs/summary

stages:

  # GET /manager/logs/summary
  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/logs/summary"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - ossec-agentlessd: !anything
            - ossec-analysisd: !anything
            - ossec-authd: !anything
            - ossec-csyslogd: !anything
            - ossec-dbd: !anything
            - ossec-execd: !anything
            - ossec-integratord: !anything
            - ossec-logcollector: !anything
            #- ossec-maild: !anything
            - ossec-monitord: !anything
            - ossec-remoted: !anything
            - ossec-rootcheck: !anything
            - ossec-syscheckd: !anything
            - sca: !anything
            - wazuh-db: !anything
            - wazuh-modulesd: !anything
            - wazuh-modulesd:ciscat: !anything
            - wazuh-modulesd:control: !anything
            - wazuh-modulesd:database: !anything
            - wazuh-modulesd:download: !anything
            - wazuh-modulesd:osquery: !anything
            - wazuh-modulesd:syscollector: !anything
          failed_items: []
          total_affected_items: !anyint
          total_failed_items: 0

---
test_name: GET /manager/api/config

stages:

  # GET /manager/api/config
  - name: Get API configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/api/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - node_name: !anystr
              node_api_config:
                host: !anystr
                port: !anyint
                behind_proxy_server: !anybool

                https:
                  enabled: !anybool
                  key: !anystr
                  cert: !anystr
                  use_ca: !anybool
                  ca: !anystr
                logs:
                  level: !anystr
                  path: !anystr
                cors:
                  enabled: !anybool
                  source_route: !anystr
                  expose_headers: !anystr
                  allow_headers: !anystr
                  allow_credentials: !anybool
                cache:
                  enabled: !anybool
                  time: !anything
                access:
                  max_login_attempts: !anyint
                  block_time: !anyint
                  max_request_per_minute: !anyint
                use_only_authd: !anybool
                drop_privileges: !anybool
                experimental_features: !anybool
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []

---
test_name: PUT /manager/api/config

stages:

  # PUT /manager/api/config
  - name: Modify API configuration (some fields)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/api/config"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: PUT
      json:
        cache:
          enabled: false
          time: 1
    response:
      status_code: 200
      json: &update_api_config_ok
        error: !anyint
        data:
          affected_items: !anything
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []

  # PUT /manager/api/config
  - name: Modify API configuration (all allowed fields)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/api/config"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: PUT
      json:
        behind_proxy_server: false
        logs:
          level: "debug"
        cache:
          enabled: true
          time: 3
        cors:
          enabled: true
          source_route: "*"
          expose_headers: "*"
          allow_headers: "*"
          allow_credentials: false
        use_only_authd: true
        experimental_features: true
    response:
      status_code: 200
      json:
        <<: *update_api_config_ok

  # PUT /manager/api/config
  - name: Modify API configuration (forbidden field)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/api/config"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: PUT
      json:
        logs:
          path: "test"
    response:
      status_code: 400

  # PUT /manager/api/config
  - name: Modify API configuration (unknown field)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/api/config"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: PUT
      json:
        unknown:
          path: "test"
    response:
      status_code: 400

  # Restart manager to apply changes
  - name: Restart manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/restart"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
    delay_after: !float "{restart_delay}"

  # GET /manager/api/config
  - name: Get API configuration that were set above
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/api/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - node_name: !anystr
              node_api_config: &api_response
                host: !anystr
                port: !anyint
                behind_proxy_server: false
                https:
                  enabled: !anybool
                  key: !anystr
                  cert: !anystr
                  use_ca: !anybool
                  ca: !anystr
                logs:
                  level: "debug"
                  path: !anystr
                cors:
                  enabled: true
                  source_route: "*"
                  expose_headers: "*"
                  allow_headers: "*"
                  allow_credentials: false
                cache:
                  enabled: true
                  time: 3
                use_only_authd: true
                drop_privileges: !anybool
                experimental_features: true
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []

---
test_name: DELETE /manager/api/config

stages:

  # DELETE /manager/api/config
  - name: Restore API configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/api/config"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        <<: *update_api_config_ok

  # Restart manager to apply changes
  - name: Restart manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/restart"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
    delay_after: !float "{restart_delay}"

  # GET /manager/api/config
  - name: Get API default configuration
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/api/config"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - node_name: !anystr
              node_api_config:
                <<: *api_response
                logs:
                  level: "info"
                  path: !anystr
                cors:
                  enabled: false
                  source_route: "*"
                  expose_headers: "*"
                  allow_headers: "*"
                  allow_credentials: false
                cache:
                  enabled: true
                  time: 0.75
                use_only_authd: false
                drop_privileges: !anybool
                experimental_features: false
          total_affected_items: 1
          total_failed_items: 0
          failed_items: []


---
test_name: GET /manager/files

stages:

  # GET /manager/files
  - name: Get ossec.conf
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/ossec.conf
    response:
      status_code: 200
      json:
        contents: !anystr

  # GET /manager/files
  - name: Get local rules
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/rules/local_rules.xml
    response:
      status_code: 200
      json:
        contents: !anystr

  # GET /manager/files
  - name: Get rules from ruleset
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: ruleset/rules/0016-wazuh_rules.xml
    response:
      status_code: 200
      json:
        contents: !anystr

  # GET /manager/files
  - name: Get local decoder
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/decoders/local_decoder.xml
    response:
      status_code: 200
      json:
        contents: !anystr

  # GET /manager/files
  - name: Get decoder from ruleset
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: ruleset/decoders/0005-wazuh_decoders.xml
    response:
      status_code: 200
      json:
        contents: !anystr

  # GET /manager/files
  - name: Get CDB list
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/lists/audit-keys
    response:
      status_code: 200
      json:
        contents: !anystr

  # GET /manager/files
  - name: Get file with wrong path
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: wrong_path/file.xml
    response:
      status_code: 400
      json:
        detail: !anystr
        title: !anystr

  # GET /manager/files
  - name: Get file with empty path
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: ''
    response:
      status_code: 400
      json:
        detail: !anystr
        title: !anystr

  # GET /manager/files
  - name: Get unexisting rules file with right path
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/rules/unexisting-rules.xml
    response:
      status_code: 400
      json:
        error: 1906

  # GET /manager/files
  - name: Get unexisting decoder file with right path
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/decoders/unexisting-decoder.xml
    response:
      status_code: 400
      json:
        error: 1906

  # GET /manager/files
  - name: Get unexisting list file with right path
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/lists/unexisting-list
    response:
      status_code: 400
      json:
        error: 1906

---
test_name: PUT /manager/files

stages:

  # GET /manager/files
  - name: Get ossec.conf
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/ossec.conf
    response:
      status_code: 200
      json:
        contents: !anystr
      save:
        json:
          ossec_conf: contents

  # PUT /manager/files
  - name: Upload ossec.conf
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "{ossec_conf}"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        overwrite: True
        path: etc/ossec.conf
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/ossec.conf'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # PUT /manager/files
  - name: Upload new rules
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- Local rules -->\n <group name=\"local,\">\n    <!--   NEW RULE    -->\n    <rule id=\"111111\" level=\"5\">\n      <if_sid>5716</if_sid>\n      <srcip>1.1.1.1</srcip>\n      <description>sshd: authentication failed from IP 1.1.1.1.</description>\n      <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n    </rule>\n  </group>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/rules/new-rules.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/rules/new-rules.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # PUT /manager/files
  - name: Upload rules (overwrite=false)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- Local rules -->\n <group name=\"local,\">\n <!--   NEW RULE    -->\n <rule id=\"111111\" level=\"5\">\n <if_sid>5716</if_sid>\n <srcip>1.1.1.1</srcip>\n  <description>sshd: authentication failed from IP 1.1.1.1.</description>\n <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n </rule>\n </group>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/rules/new-rules.xml
        overwrite: False
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1905
              id:
                - 'etc/rules/new-rules.xml'
          total_affected_items: 0
          total_failed_items: 1

  # PUT /manager/files
  - name: Upload rules (overwrite=true)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- Local rules -->\n <group name=\"local,\">\n <!--   NEW RULE    -->\n <rule id=\"111111\" level=\"5\">\n <if_sid>5716</if_sid>\n <srcip>1.1.1.1</srcip>\n  <description>sshd: authentication failed from IP 1.1.1.1.</description>\n <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n </rule>\n </group>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/rules/new-rules.xml
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/rules/new-rules.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # PUT /manager/files
  - name: Upload rules with XML syntax error (overwrite=true)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- Local rules -->\n <group name=\"local,\">\n <!--   NEW RULE    -->\n <rule id=\"111111\" level=\"5\">\n <if_sid>5716\n <srcip>1.1.1.1</srcip>\n  <description>sshd: authentication failed from IP 1.1.1.1.</description>\n <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n </rule>\n </group>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/rules/new-rules.xml
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1113
              id:
                - 'etc/rules/new-rules.xml'
          total_affected_items: 0
          total_failed_items: 1

  # PUT /manager/files
  - name: Upload new decoder
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- NEW Local Decoders -->\n <decoder name=\"local_decoder_example\">\n <program_name>NEW DECODER</program_name>\n </decoder>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/decoders/new-decoder.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/decoders/new-decoder.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # PUT /manager/files
  - name: Upload decoder (overwrite=false)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- NEW Local Decoders -->\n <decoder name=\"local_decoder_example\">\n <program_name>NEW DECODER</program_name>\n </decoder>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/decoders/new-decoder.xml
        overwrite: False
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1905
              id:
                - 'etc/decoders/new-decoder.xml'
          total_affected_items: 0
          total_failed_items: 1

  # PUT /manager/files
  - name: Upload decoder (overwrite=true)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- NEW Local Decoders -->\n <decoder name=\"local_decoder_example\">\n <program_name>NEW DECODER</program_name>\n </decoder>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/decoders/new-decoder.xml
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/decoders/new-decoder.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # PUT /manager/files
  - name: Upload decoder with XML syntax error (overwrite=true)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- NEW Local Decoders -->\n <decoder name=\"local_decoder_example\" NEW DECODER</program_name>\n </decoder>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/decoders/new-decoder.xml
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1113
              id:
                - 'etc/decoders/new-decoder.xml'
          total_affected_items: 0
          total_failed_items: 1

  # PUT /manager/files
  - name: Upload new CDB list
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "test-wazuh-w:write\ntest-wazuh-r:read\ntest-wazuh-a:attribute\ntest-wazuh-x:execute\ntest-wazuh-c:command\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/lists/new-list
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/lists/new-list'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # PUT /manager/files
  - name: Upload CDB list (overwrite=false)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "test-wazuh-w:write\ntest-wazuh-r:read\ntest-wazuh-a:attribute\ntest-wazuh-x:execute\ntest-wazuh-c:command\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/lists/new-list
        overwrite: False
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1905
              id:
                - 'etc/lists/new-list'
          total_affected_items: 0
          total_failed_items: 1

  # PUT /manager/files
  - name: Upload CDB list (overwrite=true)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "test-wazuh-w:write\ntest-wazuh-r:read\ntest-wazuh-a:attribute\ntest-wazuh-x:execute\ntest-wazuh-c:command\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/lists/new-list
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/lists/new-list'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # PUT /manager/files
  - name: Upload CDB list with a syntax error (overwrite=true)
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: ":write\ntest-wazuh-r:read\ntest-wazuh-a:attribute\ntest-wazuh-x:execute\ntest-wazuh-c:command\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/lists/new-list
        overwrite: True
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1800
              id:
                - 'etc/lists/new-list'
          total_affected_items: 0
          total_failed_items: 1

---
test_name: DELETE /manager/files

stages:

  # DELETE /manager/files
  - name: Delete rules file
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/rules/local_rules.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/rules/local_rules.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # DELETE /manager/files
  - name: Delete unexisting rules file
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/rules/unexisting_rules.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1906
              id:
                - 'etc/rules/unexisting_rules.xml'
          total_affected_items: 0
          total_failed_items: 1

  # DELETE /manager/files
  - name: Delete decoder file
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/decoders/local_decoder.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/decoders/local_decoder.xml'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # DELETE /manager/files
  - name: Delete unexisting decoder file
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/decoders/unexisting_decoder.xml
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1906
              id:
                - 'etc/decoders/unexisting_decoder.xml'
          total_affected_items: 0
          total_failed_items: 1

  # DELETE /manager/files
  - name: Delete CDB list file
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/lists/security-eventchannel.cdb
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - 'etc/lists/security-eventchannel.cdb'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  # DELETE /manager/files
  - name: Delete unexisting CDB list file
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: DELETE
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        path: etc/lists/unexisting-list
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1906
              id:
                - 'etc/lists/unexisting-list'
          total_affected_items: 0
          total_failed_items: 1

---
test_name: GET /manager/configuration/validation (OK)

stages:

  # GET /manager/configuration/validation
  - name: Request validation
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/validation"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - name: !anystr
              status: 'OK'
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

---
test_name: GET /manager/validation (KO)

stages:

  #### Upload corrupted rules file
  # PUT /manager/files
  - name: Upload corrupted
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/files"
      method: PUT
      data: "<!-- Local rules -->\n <group name=\"local,\">\n <!--   NEW RULE    -->\n  <rule id=\"111111\" level=\"XXX\">\n      <if_sid>5716</if_sid>\n      <srcip>1.1.1.1</srcip>\n      <description>sshd: authentication failed from IP 1.1.1.1.</description>\n      <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n    </rule>\n  </group>\n"
      headers:
        Authorization: "Bearer {test_login_token}"
        content-type: application/octet-stream
      params:
        path: etc/rules/new-rules_corrupted.xml
    response:
      status_code: 200
      json:
        error: !anyint

  # GET /manager/configuration/validation
  - name: Request validation
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/validation"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items:
            - error:
                code: 1908
              id:
                - !anystr
          total_affected_items: 0
          total_failed_items: 1

---
test_name: GET /manager/configuration/{component}/{configuration}

stages:

  - name: Try to show the config of analysis/global in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/analysis/global"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - global: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of analysis/active_response in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/analysis/active_response"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - active-response: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0
        message: !anystr

  - name: Try to show the config of analysis/alerts in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/analysis/alerts"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - alerts: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of analysis/command in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/analysis/command"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - command: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of analysis/internal in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/analysis/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of auth in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/auth/auth"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - auth: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of com/internal in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/com/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of logcollector/localfile in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/logcollector/localfile"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - localfile: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of logcollector/socket in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/logcollector/socket"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items: []
          failed_items: []
          total_affected_items: 0
          total_failed_items: 0

  - name: Try to show the config of logcollector/internal in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/logcollector/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of monitor/internal in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/monitor/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - monitord: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of request/remote in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/request/remote"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - remote: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of request/internal in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/request/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of syscheck/syscheck in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/syscheck/syscheck"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - syscheck: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of syscheck/rootcheck in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/syscheck/rootcheck"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - rootcheck: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of syscheck/internal in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/syscheck/internal"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - internal: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0

  - name: Try to show the config of wmodules/wmodules in the manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/configuration/wmodules/wmodules"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: GET
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - wmodules: !anything
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0


---
test_name: PUT /manager/restart

stages:

  # PUT /manager/restart
  - name: Restart manager
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/manager/restart"
      method: PUT
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        error: !anyint
        data:
          affected_items:
            - !anystr
          failed_items: []
          total_affected_items: 1
          total_failed_items: 0
